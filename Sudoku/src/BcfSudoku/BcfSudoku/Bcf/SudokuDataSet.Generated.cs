//---------------------------------------------------------------------------------
// <auto-generated>
//    Code was generated by CalculationWorks BCF Editor 
//    http://www.calculationworks.com/
//
//    Manual changes to this file will be overwritten when the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------
using BcfSudoku.Bcf;
using CalculationWorks.BusinessModel;
using System;
using System.Collections.Generic;
using System.Linq;
using CalculationWorks.BusinessModel.Design;
namespace BcfSudoku.Bcf {
    /// <summary><para>Represents the "Sudoku"-dataset.</para></summary>
    /// <remarks>
    /// <para>The "Sudoku"-dataset manages following tables:<list type="bullet">
    ///        <item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
    ///        <item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
    ///        <item><description><see cref="T:BcfSudoku.Bcf.LinkTable">Link</see></description></item>
    /// </list></para>
    /// <para>The "Sudoku"-dataset manages following relations:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see></description></item>
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see></description></item>
    /// </list></para>
    /// </remarks>
    partial class SudokuDataSet : BcfDataSet {
        /// <summary> Creates a new instance. </summary>
        public SudokuDataSet()
            : this(new BcfSudoku.Bcf.SudokuDataSetSetup()) { }

        /// <summary> Creates a new instance. </summary>
        /// <param name="dataSetSetup">The dataSetSetup.</param>
        internal  SudokuDataSet(BcfSudoku.Bcf.SudokuDataSetSetup dataSetSetup)
            : base(dataSetSetup, GetTableFactory()) {
            InitializeSchemaProperties();
            Initialized();
        }
        partial void Initialized();
        private void InitializeSchemaProperties() {
            CellTable = (CellTable)Tables["Cell"];
            ClusterTable = (ClusterTable)Tables["Cluster"];
            LinkTable = (LinkTable)Tables["Link"];
            ClusterLinkRelation = (BcfRelation<SudokuRelationOptions>)Relations["ClusterLink"];
            CellLinkRelation = (BcfRelation<SudokuRelationOptions>)Relations["CellLink"];
            CellTable.InitializeSchemaProperties();
            ClusterTable.InitializeSchemaProperties();
            LinkTable.InitializeSchemaProperties();
        }
        /// <summary><para>Gets the <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>-table.</para></summary>
        /// <value>The <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>-table.</value>
        public CellTable CellTable { get; private set; }
        /// <summary><para>Gets the <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>-table.</para></summary>
        /// <value>The <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>-table.</value>
        public ClusterTable ClusterTable { get; private set; }
        /// <summary><para>Gets the <see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>-table.</para></summary>
        /// <value>The <see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>-table.</value>
        public LinkTable LinkTable { get; private set; }
        /// <summary><para>Gets the "ClusterLink"-relation.</para></summary>
        /// <value>the "ClusterLink"-relation.</value>
        /// <remarks>
        /// <list type="table">
        ///        <item><term>relation name:</term><description>"ClusterLink"</description></item>
        ///        <item><term>parent table:</term><description><see cref="T:BcfSudoku.Bcf.LinkTable">Link</see></description></item>
        ///        <item><term>parent key columns:</term><description></description></item>
        ///        <item><term>child table:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
        ///        <item><term>child key columns:</term><description></description></item>
        ///        <item><term>update rule:</term><description>NoAction</description></item>
        ///        <item><term>delete rule:</term><description>NoAction</description></item>
        /// </list>
        /// </remarks>
        public BcfRelation<SudokuRelationOptions> ClusterLinkRelation { get; private set; }
        /// <summary><para>Gets the "CellLink"-relation.</para></summary>
        /// <value>the "CellLink"-relation.</value>
        /// <remarks>
        /// <list type="table">
        ///        <item><term>relation name:</term><description>"CellLink"</description></item>
        ///        <item><term>parent table:</term><description><see cref="T:BcfSudoku.Bcf.LinkTable">Link</see></description></item>
        ///        <item><term>parent key columns:</term><description></description></item>
        ///        <item><term>child table:</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
        ///        <item><term>child key columns:</term><description></description></item>
        ///        <item><term>update rule:</term><description>NoAction</description></item>
        ///        <item><term>delete rule:</term><description>NoAction</description></item>
        /// </list>
        /// </remarks>
        public BcfRelation<SudokuRelationOptions> CellLinkRelation { get; private set; }
        private static BcfTableFactory GetTableFactory() {
            BcfTableFactory factory = new BcfTableFactory();
            factory.Register("Cell", (builder) => new CellTable(builder));
            factory.Register("Cluster", (builder) => new ClusterTable(builder));
            factory.Register("Link", (builder) => new LinkTable(builder));
            return factory;
        }
    }
    /// <summary><para>Represents the "Cell"-table.</para></summary>
    /// <remarks>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>" manages following columns:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description>
    ///         <description>
    ///             The cells value as bit value (0=empty; 1=1; 2=2; 4=3; 8=4; 16=5; 32=6; 64=7; 128=8; 256=9).
    ///         </description>
    ///     </item>
    ///        <item><description><see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description>
    ///         <description>
    ///             The cells allowed values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
    ///         </description>
    ///     </item>
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>" manages following rules:<list type="bullet">
    ///        <item><description>#0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>" is part of following relations:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see> - parent:<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>, child:<see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
    /// </list></para>
    /// </remarks>
    partial class CellTable : BcfTable<CellRow, SudokuTableOptions> {
        /// <summary>Gets the SudokuDataSet the table belongs to.</summary>
        public new SudokuDataSet DataSet { get { return (SudokuDataSet)base.DataSet; } }
        /// <summary><para>Gets the "Value"-column.</para>
        ///     <description>
        ///         The cells value as bit value (0=empty; 1=1; 2=2; 4=3; 8=4; 16=5; 32=6; 64=7; 128=8; 256=9).
        ///     </description>
        /// </summary>
        /// <value>The "Value"-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"Value"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>no</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (Parameter: "value")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (Parameter: "cellValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ] (Parameter: "value")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "cellValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public BcfColumn<int, SudokuColumnOptions> ValueColumn { get; private set; }
        /// <summary><para>Gets the "AllowedValues"-column.</para>
        ///     <description>
        ///         The cells allowed values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
        ///     </description>
        /// </summary>
        /// <value>The "AllowedValues"-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"AllowedValues"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetCellAllowedValues(value, clusterMissingValues)</code></item>
		///		<item><term> - parameter "value:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see> (path: "Value")</description></item>
		///		<item><term> - parameter "clusterMissingValues:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (path: "+CellLink*.-ClusterLink*.MissingValues")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see> (Parameter: "allowed")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ] (Parameter: "allowedValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public BcfColumn<int, SudokuColumnOptions> AllowedValuesColumn { get; private set; }
        internal void InitializeSchemaProperties() {
            ValueColumn = (BcfColumn<int, SudokuColumnOptions>)Columns["Value"];
            AllowedValuesColumn = (BcfColumn<int, SudokuColumnOptions>)Columns["AllowedValues"];
        }
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal CellTable(BcfTableBuilder builder) : base(builder) { }
        /// <summary> Internal. Do not use. </summary>
        protected override CellRow CreateRow(BcfRowBuilder builder) {
            return new CellRow(builder);
        }
    }
    /// <summary><para>Represents the "Cell"-row.</para></summary>
    partial class CellRow : BcfRow {
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal CellRow(BcfRowBuilder builder) : base(builder) { }
        /// <summary>Returns the <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>-table the row belongs to.</summary>
        /// <returns>The <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>-table the row belongs to.</returns>
        public new CellTable Table {
            get { return (CellTable)base.Table; }
        }
        /// <summary><para>Gets or sets the value stored in <see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see>-column.</para>
        ///     <description>
        ///         The cells value as bit value (0=empty; 1=1; 2=2; 4=3; 8=4; 16=5; 32=6; 64=7; 128=8; 256=9).
        ///     </description>
        /// </summary>
        /// <value>The value stored in <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see>-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"Value"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>no</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (Parameter: "value")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (Parameter: "cellValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ] (Parameter: "value")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "cellValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public int Value {
            get { return GetValue(Table.ValueColumn); }
            set { SetValue(Table.ValueColumn, value); }
        }
        /// <summary><para>Gets the value stored in <see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see>-column.</para>
        ///     <description>
        ///         The cells allowed values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
        ///     </description>
        /// </summary>
        /// <value>The value stored in <see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see>-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"AllowedValues"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetCellAllowedValues(value, clusterMissingValues)</code></item>
		///		<item><term> - parameter "value:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see> (path: "Value")</description></item>
		///		<item><term> - parameter "clusterMissingValues:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (path: "+CellLink*.-ClusterLink*.MissingValues")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see> (Parameter: "allowed")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ] (Parameter: "allowedValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public int AllowedValues {
            get { return GetValue(Table.AllowedValuesColumn); }
        }
        /// <summary>Gets the child rows of "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see>"-relation.</summary>
        /// <returns>The child rows of relation "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see>"-relation.</returns>
        public BcfChildRelationCell<LinkRow> LinkRows {
            get { return (BcfChildRelationCell<LinkRow>)GetChildRows(Table.DataSet.CellLinkRelation); }
        }
    }
    /// <summary><para>Represents the "Cluster"-table.</para></summary>
    /// <remarks>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>" manages following columns:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description>
    ///         <description>
    ///             The clusters missing values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
    ///         </description>
    ///     </item>
    ///        <item><description><see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description>
    ///         <description>
    ///             Same as <see cref="ClusterRow.MissingValues"/>as array of bit values (e.g. MissingValues=3 so MissingValuesArray={{1}, {2}}).
    ///         </description>
    ///     </item>
    ///        <item><description><see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description>
    ///         <description>
    ///             Co-array of <see cref="ClusterRow.MissingValuesArray"/>. Number of cells in cluster their <see cref="CellRow.AllowedValues"/> contains value.
    ///         </description>
    ///     </item>
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>" manages following rules:<list type="bullet">
    ///        <item><description>#0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>" is part of following relations:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see> - parent:<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>, child:<see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
    /// </list></para>
    /// </remarks>
    partial class ClusterTable : BcfTable<ClusterRow, SudokuTableOptions> {
        /// <summary>Gets the SudokuDataSet the table belongs to.</summary>
        public new SudokuDataSet DataSet { get { return (SudokuDataSet)base.DataSet; } }
        /// <summary><para>Gets the "MissingValues"-column.</para>
        ///     <description>
        ///         The clusters missing values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
        ///     </description>
        /// </summary>
        /// <value>The "MissingValues"-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValues"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetClusterMissingValues(cellValues)</code></item>
		///		<item><term> - parameter "cellValues:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see> (path: "+ClusterLink*.-CellLink*.Value")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (Parameter: "clusterMissingValues")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see> (Parameter: "missingValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public BcfColumn<int, SudokuColumnOptions> MissingValuesColumn { get; private set; }
        /// <summary><para>Gets the "MissingValuesArray"-column.</para>
        ///     <description>
        ///         Same as <see cref="ClusterRow.MissingValues"/>as array of bit values (e.g. MissingValues=3 so MissingValuesArray={{1}, {2}}).
        ///     </description>
        /// </summary>
        /// <value>The "MissingValuesArray"-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValuesArray"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32[]</description></item>
		///		<item><term>data type:</term><description>System.Int32[]</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.BitRegister[missingValues]</code></item>
		///		<item><term> - parameter "missingValues:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (path: "MissingValues")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see> (Parameter: "missingValuesArray")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "missingValuesArray")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public BcfColumn<int[], SudokuColumnOptions> MissingValuesArrayColumn { get; private set; }
        /// <summary><para>Gets the "MissingValuesTargetCount"-column.</para>
        ///     <description>
        ///         Co-array of <see cref="ClusterRow.MissingValuesArray"/>. Number of cells in cluster their <see cref="CellRow.AllowedValues"/> contains value.
        ///     </description>
        /// </summary>
        /// <value>The "MissingValuesTargetCount"-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValuesTargetCount"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32[]</description></item>
		///		<item><term>data type:</term><description>System.Int32[]</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetClusterMissingValuesTargetCount(missingValuesArray, allowed)</code></item>
		///		<item><term> - parameter "missingValuesArray:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see> (path: "MissingValuesArray")</description></item>
		///		<item><term> - parameter "allowed:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (path: "+ClusterLink*.-CellLink*.AllowedValues")</description></item>
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "missingValuesTargetCount")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public BcfColumn<int[], SudokuColumnOptions> MissingValuesTargetCountColumn { get; private set; }
        internal void InitializeSchemaProperties() {
            MissingValuesColumn = (BcfColumn<int, SudokuColumnOptions>)Columns["MissingValues"];
            MissingValuesArrayColumn = (BcfColumn<int[], SudokuColumnOptions>)Columns["MissingValuesArray"];
            MissingValuesTargetCountColumn = (BcfColumn<int[], SudokuColumnOptions>)Columns["MissingValuesTargetCount"];
        }
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal ClusterTable(BcfTableBuilder builder) : base(builder) { }
        /// <summary> Internal. Do not use. </summary>
        protected override ClusterRow CreateRow(BcfRowBuilder builder) {
            return new ClusterRow(builder);
        }
    }
    /// <summary><para>Represents the "Cluster"-row.</para></summary>
    partial class ClusterRow : BcfRow {
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal ClusterRow(BcfRowBuilder builder) : base(builder) { }
        /// <summary>Returns the <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>-table the row belongs to.</summary>
        /// <returns>The <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>-table the row belongs to.</returns>
        public new ClusterTable Table {
            get { return (ClusterTable)base.Table; }
        }
        /// <summary><para>Gets the value stored in <see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see>-column.</para>
        ///     <description>
        ///         The clusters missing values as bit mask (0=none; 1=1; 2=2; 3=1+2; 511=1+2+4+8+16+32+64+128+256).
        ///     </description>
        /// </summary>
        /// <value>The value stored in <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see>-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValues"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32</description></item>
		///		<item><term>data type:</term><description>System.Int32</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetClusterMissingValues(cellValues)</code></item>
		///		<item><term> - parameter "cellValues:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see> (path: "+ClusterLink*.-CellLink*.Value")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (Parameter: "clusterMissingValues")</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see> (Parameter: "missingValues")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see> #0 <code>(value == 0 &amp;&amp; allowedValues == 0) ? new BcfFaultMessage(&quot;cell not solvable&quot;) : null</code> [Tagging: ]</description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public int MissingValues {
            get { return GetValue(Table.MissingValuesColumn); }
        }
        /// <summary><para>Gets the value stored in <see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see>-column.</para>
        ///     <description>
        ///         Same as <see cref="ClusterRow.MissingValues"/>as array of bit values (e.g. MissingValues=3 so MissingValuesArray={{1}, {2}}).
        ///     </description>
        /// </summary>
        /// <value>The value stored in <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see>-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValuesArray"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32[]</description></item>
		///		<item><term>data type:</term><description>System.Int32[]</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.BitRegister[missingValues]</code></item>
		///		<item><term> - parameter "missingValues:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see> (path: "MissingValues")</description></item>
		///		<item><term>Triggers columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see> (Parameter: "missingValuesArray")</description></item>
		///		</list></description></item>	        
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "missingValuesArray")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent columns:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public int[] MissingValuesArray {
            get { return GetValue(Table.MissingValuesArrayColumn); }
        }
        /// <summary><para>Gets the value stored in <see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see>-column.</para>
        ///     <description>
        ///         Co-array of <see cref="ClusterRow.MissingValuesArray"/>. Number of cells in cluster their <see cref="CellRow.AllowedValues"/> contains value.
        ///     </description>
        /// </summary>
        /// <value>The value stored in <see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesTargetCountColumn">MissingValuesTargetCount</see>-column.</value>
		/// <remarks>
		/// <list type="table">
		///		<item><term>column name:</term><description>"MissingValuesTargetCount"</description></item>
		///		<item><term>table name:</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
		///		<item><term>property type:</term><description>System.Int32[]</description></item>
		///		<item><term>data type:</term><description>System.Int32[]</description></item>
		///		<item><term>allows null:</term><description>no</description></item>
		///		<item><term>read only:</term><description>yes</description></item>
		///		<item><term>is primary key:</term><description>no</description></item>
		///		<item><term>function:</term><code>Util.GetClusterMissingValuesTargetCount(missingValuesArray, allowed)</code></item>
		///		<item><term> - parameter "missingValuesArray:"</term><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see> (path: "MissingValuesArray")</description></item>
		///		<item><term> - parameter "allowed:"</term><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see> (path: "+ClusterLink*.-CellLink*.AllowedValues")</description></item>
		///		<item><term>Triggers validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ] (Parameter: "missingValuesTargetCount")</description></item>
		///		</list></description></item>	        
		///		<item><term>Depends on:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.ValueColumn">Value</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.CellTable">Cell</see>.<see cref="P:BcfSudoku.Bcf.CellTable.AllowedValuesColumn">AllowedValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesColumn">MissingValues</see></description></item>
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see>.<see cref="P:BcfSudoku.Bcf.ClusterTable.MissingValuesArrayColumn">MissingValuesArray</see></description></item>
		///		</list></description></item>	        
		///		<item><term>Dependent validators:</term><description><list type="bullet">
		///			<item><description><see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see> #0 <code>Util.ClusterIsValid(missingValuesArray, missingValuesTargetCount, cellValues)</code> [Tagging: ]</description></item>
		///		</list></description></item>	        
	    /// </list>
		/// </remarks>
        public int[] MissingValuesTargetCount {
            get { return GetValue(Table.MissingValuesTargetCountColumn); }
        }
        /// <summary>Gets the child rows of "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see>"-relation.</summary>
        /// <returns>The child rows of relation "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see>"-relation.</returns>
        public BcfChildRelationCell<LinkRow> LinkRows {
            get { return (BcfChildRelationCell<LinkRow>)GetChildRows(Table.DataSet.ClusterLinkRelation); }
        }
    }
    /// <summary><para>Represents the "Link"-table.</para></summary>
    /// <remarks>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>" manages following columns:<list type="bullet">
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>" manages following rules:<list type="bullet">
    /// </list></para>
    /// <para>The "<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>" is part of following relations:<list type="bullet">
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see> - parent:<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>, child:<see cref="T:BcfSudoku.Bcf.ClusterTable">Cluster</see></description></item>
    ///        <item><description><see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see> - parent:<see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>, child:<see cref="T:BcfSudoku.Bcf.CellTable">Cell</see></description></item>
    /// </list></para>
    /// </remarks>
    partial class LinkTable : BcfTable<LinkRow, SudokuTableOptions> {
        /// <summary>Gets the SudokuDataSet the table belongs to.</summary>
        public new SudokuDataSet DataSet { get { return (SudokuDataSet)base.DataSet; } }
        internal void InitializeSchemaProperties() {
        }
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal LinkTable(BcfTableBuilder builder) : base(builder) { }
        /// <summary> Internal. Do not use. </summary>
        protected override LinkRow CreateRow(BcfRowBuilder builder) {
            return new LinkRow(builder);
        }
    }
    /// <summary><para>Represents the "Link"-row.</para></summary>
    partial class LinkRow : BcfRow {
        /// <summary> Internal. Do not use. </summary>
        /// <param name="builder">The builder.</param>
        protected internal LinkRow(BcfRowBuilder builder) : base(builder) { }
        /// <summary>Returns the <see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>-table the row belongs to.</summary>
        /// <returns>The <see cref="T:BcfSudoku.Bcf.LinkTable">Link</see>-table the row belongs to.</returns>
        public new LinkTable Table {
            get { return (LinkTable)base.Table; }
        }
        /// <summary>Gets or sets the parent row using the "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.ClusterLinkRelation">ClusterLink</see>"-relation.</summary>
        public ClusterRow ClusterRow {
            get { return (ClusterRow)GetParentRow(Table.DataSet.ClusterLinkRelation); }
            set { SetParentRow(Table.DataSet.ClusterLinkRelation, value); }
        }
        /// <summary>Gets or sets the parent row using the "<see cref="P:BcfSudoku.Bcf.SudokuDataSet.CellLinkRelation">CellLink</see>"-relation.</summary>
        public CellRow CellRow {
            get { return (CellRow)GetParentRow(Table.DataSet.CellLinkRelation); }
            set { SetParentRow(Table.DataSet.CellLinkRelation, value); }
        }
    }
}
namespace BcfSudoku.Bcf {
    public partial class SudokuColumnOptions {
        /// <summary>
        /// Creates a new instance
        /// </summary>
        public SudokuColumnOptions(
        ) { }
    }
}
namespace BcfSudoku.Bcf {
    public partial class SudokuTableOptions {
        /// <summary>
        /// Creates a new instance
        /// </summary>
        public SudokuTableOptions(
        ) { }
    }
}
namespace BcfSudoku.Bcf {
    public partial class SudokuRuleOptions {
        /// <summary>
        /// Creates a new instance
        /// </summary>
        public SudokuRuleOptions(
        ) { }
    }
}
namespace BcfSudoku.Bcf {
    public partial class SudokuRelationOptions {
        /// <summary>
        /// Creates a new instance
        /// </summary>
        public SudokuRelationOptions(
        ) { }
    }
}
